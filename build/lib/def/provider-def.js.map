{
  "version": 3,
  "sources": ["../../../src/lib/def/provider-def.ts"],
  "sourcesContent": ["import * as Provider from '../provider';\nexport * from '../provider';\n\n/**Available provider identifier strings */\nexport type providerServices = 'dwdService' | 'zamgService' | 'ninaService' | 'uwzService' | 'metroService';\nexport const providerServicesArray = ['dwdService', 'zamgService', 'uwzService']; //, 'uwzService', 'metroService'];\nexport type ProviderClassType =\n    | Provider.DWDProvider\n    | Provider.ZAMGProvider\n    | Provider.UWZProvider\n    | Provider.NINAProvider\n    | Provider.METROProvider;\n\ntype nullType = null | undefined | void;\nexport type messageFilterTypeWithFilter = { filter: messageFilterType };\nexport type messageFilterType = {\n    level?: number;\n    type: string[];\n    hours: number;\n};\n/** Full dwd import jsons */\nexport type dataImportDwdType =\n    | nullType\n    | {\n          type: string;\n          features: [\n              {\n                  type: string;\n                  id: string;\n                  geometry: {\n                      type: string;\n                      coordinates: number[][][][];\n                  };\n                  properties: dataImportDwdTypeProperties;\n                  geometry_name: string;\n                  bbox: number[];\n              },\n          ];\n          totalFeatures: number;\n          numberMatched: number;\n          numberReturned: number;\n          timeStamp: string;\n          crs: {\n              type: string;\n              properties: {\n                  name: string;\n              };\n          };\n      };\n\n/** dwd import json that we use */\nexport type dataImportDwdTypeProperties = {\n    AREADESC: string;\n    NAME: string;\n    WARNCELLID: number;\n    IDENTIFIER: string;\n    SENDER: string;\n    SENT: string;\n    STATUS: string;\n    MSGTYPE: string;\n    SOURCE: string;\n    SCOPE: string;\n    CODE: string;\n    LANGUAGE: string;\n    CATEGORY: string;\n    EVENT: string;\n    RESPONSETYPE: string;\n    URGENCY: string;\n    SEVERITY: string;\n    CERTAINTY: string;\n    EC_PROFILE: string;\n    EC_LICENSE: string;\n    EC_II: string;\n    EC_GROUP: string;\n    EC_AREA_COLOR: string;\n    EFFECTIVE: string;\n    ONSET: string;\n    EXPIRES: string;\n    SENDERNAME: string;\n    HEADLINE: string;\n    DESCRIPTION: string;\n    INSTRUCTION: string;\n    WEB: string;\n    CONTACT: string;\n    PARAMETERNAME: string;\n    PARAMETERVALUE: string;\n    ALTITUDE: number;\n    CEILING: number;\n    REFERENCES?: string;\n    GC_STATE: string;\n    GC_WARNCELLID: number;\n    INFO_ID: string;\n    PROCESSTIME: string;\n};\n/**Full uwz import json. */\nexport type dataImportUWZType =\n    | nullType\n    | {\n          results: Array<dataImportUwzTypeProperties>;\n          cached: number;\n      };\n/**uwz import json that we use. */\nexport type dataImportUwzTypeProperties = {\n    center: string;\n    areaID: string;\n    dtgEnd: number;\n    areaType: string;\n    dtgStart: number;\n    severity: number;\n    type: number;\n    payload: {\n        id: string;\n        creation: number;\n        uwzLevel: number;\n        translationsShortText: {\n            FR?: string;\n            LU?: string;\n            EN?: string;\n            ES?: string;\n            NL?: string;\n            DE?: string;\n            IT?: string;\n            DK?: string;\n        };\n        translationsLongText: {\n            FR?: string;\n            LU?: string;\n            EN?: string;\n            ES?: string;\n            NL?: string;\n            DE?: string;\n            IT?: string;\n            DK?: string;\n        };\n        fileName: string;\n        levelName: string;\n        shortText: string;\n        longText: string;\n        altMin: number;\n        altMax: number;\n    };\n};\n/**Full zamg import json */\nexport type dataImportZamgType =\n    | nullType\n    | {\n          type: string;\n          geometry: {\n              type: string;\n              coordinates: Array<Array<Array<Array<number>>>>;\n          };\n          properties: {\n              location: {\n                  type: string;\n                  properties: {\n                      gemeindenr: number;\n                      name: string;\n                      urlname: string;\n                  };\n              };\n              warnings: Array<{\n                  type: string;\n                  properties: dataImportZamgTypeProperties;\n              }>;\n          };\n      };\n/**zamg import json that we use. */\nexport type dataImportZamgTypeProperties = {\n    nachrichtentyp?: string;\n    location?: string;\n    warnid: number;\n    chgid: number;\n    verlaufid: number;\n    warntypid: number;\n    begin: string;\n    end: string;\n    create: string;\n    text: string;\n    auswirkungen: string;\n    empfehlungen: string;\n    meteotext: string;\n    updategrund: string;\n    warnstufeid: number;\n    rawinfo: {\n        wtype: number;\n        wlevel: number;\n        start: string;\n        end: string;\n    };\n};\n\nexport type DataImportType = nullType | dataImportDwdType | dataImportZamgType | dataImportUWZType;\n\n/*const dataImport: DataImportType = {\n    dwdService: {\n        out: {\n            start: { convert: 'getDateObject', source: 'ONSET' },\n            end: { convert: 'getDateObject', source: 'EXPIRES' },\n            ec_ii_type: 'EC_II',\n            picture: '',\n            level: 'SEVERITY',\n            areaID: 'AREADESC',\n            altitudeStart: 'ALTITUDE',\n            altitudeEnd: 'CEILING',\n            messageHash: { convert: 'messageHash' },\n            typename: { convert: 'warningTypesString', source: 'CATEGORY' },\n            description: 'DESCRIPTION',\n            headline: 'HEADLINE',\n            instruction: 'INSTRUCTION',\n            urgency: 'URGENCY',\n            last_seen: { convert: 'last_seen' },\n        },\n    },\n};*/\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iCAAc,wBADd;AAKO,MAAM,wBAAwB,CAAC,cAAc,eAAe,YAAY;",
  "names": []
}
